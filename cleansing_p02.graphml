<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:java="http://www.yworks.com/xml/yfiles-common/1.0/java" xmlns:sys="http://www.yworks.com/xml/yfiles-common/markup/primitives/2.0" xmlns:x="http://www.yworks.com/xml/yfiles-common/markup/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yEd 3.19.1-->
  <key attr.name="Beschreibung" attr.type="string" for="graph" id="d0"/>
  <key for="port" id="d1" yfiles.type="portgraphics"/>
  <key for="port" id="d2" yfiles.type="portgeometry"/>
  <key for="port" id="d3" yfiles.type="portuserdata"/>
  <key attr.name="url" attr.type="string" for="node" id="d4"/>
  <key attr.name="description" attr.type="string" for="node" id="d5"/>
  <key for="node" id="d6" yfiles.type="nodegraphics"/>
  <key for="graphml" id="d7" yfiles.type="resources"/>
  <key attr.name="url" attr.type="string" for="edge" id="d8"/>
  <key attr.name="description" attr.type="string" for="edge" id="d9"/>
  <key for="edge" id="d10" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <data key="d0" xml:space="preserve"/>
    <node id="n0">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="2480.0" width="3508.0" x="0.0" y="0.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="4.0" x="1752.0" y="1238.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n1">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="150.0" width="3508.0" x="0.0" y="0.0"/>
          <y:Fill color="#9BF244" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Julius Sans One" fontSize="90" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="102.18991088867188" horizontalTextPosition="center" iconTextGap="4" modelName="custom" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1842.9681396484375" x="832.5159301757812" xml:space="preserve" y="23.905044555664062">Data Cleansing &amp; Pre-Processing (2/2)<y:LabelModel><y:SmartNodeLabelModel distance="4.0"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/></y:ModelParameter></y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n2">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="15.0" y="165.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Julius Sans One" fontSize="45" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="55.09508514404297" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#395819" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">6. Dates</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n3">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="825.0" width="1126.0" x="15.0" y="364.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="815.28955078125" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; c = pd.DataFrame(
...    {'Name': ['Anna', 'Bill', 'Charly'],
...     'DOB': ['25.08.1986',
...             '21.01.1988',
...             '10.12.1992'],
...     'Entry': ['06/01/2016',
...               '08/01/2015',
...               '04/01/2018'],
...     'Term': ['18-12-31',
...              '19-04-30',
...              '19-07-31']},
...    index=['emp01', 'emp02', 'emp03'])
&gt;&gt;&gt; pd.to_datetime(c['DOB])
emp01   1986-08-25
emp02   1988-01-21
emp03   1992-10-12
Name: DateOfBirth, dtype: datetime64[ns]
&gt;&gt;&gt; c['Entry]=pd.to_datetime(c['Entry],
...                          format='%m/%d/%Y)
&gt;&gt;&gt; c['Term']=pd.to_datetime(c['Term'],
...                          format='%y-%m-%d')</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n4">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="136.0" width="1126.0" x="15.0" y="228.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="133.9953155517578" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">The pandas inclusive method to_datetime can convert entire columns. It detects standard date formats, but a format string can be optionally provided.</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n5">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="15.0" y="1539.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Julius Sans One" fontSize="45" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="55.09508514404297" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#395819" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">7. Renaming Columns</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n6">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="89.0" width="1126.0" x="15.0" y="1602.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="91.33020782470703" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">If columns are not correctly recognized as numeric data types, this must be corrected.</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n7">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="15.0" y="1911.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Julius Sans One" fontSize="45" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="55.09508514404297" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#395819" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">8. Column Selection</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n8">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="205.0" width="1126.0" x="15.0" y="1691.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="198.68798828125" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; c.rename(columns={'DOB':'dateofbirth',
...                   'Entry':'entry',
...                   'Term':'termination',
...                   'Duration':'duration'},
...          inplace=True)</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n9">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="49.0" width="1126.0" x="1191.0" y="228.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="44.53759765625" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; pd.merge(b,c,how='left',on='Name')</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n10">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="123.0" width="1126.0" x="1191.0" y="413.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="121.61279296875" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; pd.merge(df_1,df_2,how='left',
...          left_on=['col1','col2'],
...          right_on=['ColumnA','ColumnB'])</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n11">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="136.0" width="1126.0" x="1191.0" y="277.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="133.9953155517578" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">If tables are to be joined over several and also differently named columns, this is done by specifying the column names in an array.</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n12">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="349.0" width="1026.0" x="1241.0" y="750.0"/>
          <y:Fill color="#FCF3D9" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="italic" hasBackgroundColor="false" hasLineColor="false" height="347.3208312988281" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1026.0" x="4.0" xml:space="preserve" y="4.0">(a) Nominal data
Different discrete categorical values without any rank/order or metric.
Examples: Colors of cars, genre of movies
(b) Ordinal data
Series of discrete categorical values with a defined order
Examples: Hierarchy levels in an organization, version of a technical gadget</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n13">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="1191.0" y="1114.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="40" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="54.759952545166016" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">10.1 One-hot-encoding</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n14">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="89.0" width="1126.0" x="1191.0" y="1177.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="91.33020782470703" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">Unique column for each occurence of a categorical value per feature; three possible packages are e.g.:</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n15">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="516.0" width="1126.0" x="1191.0" y="1266.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="506.98876953125" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; d = b['Name']
&gt;&gt;&gt; pd.get_dummies(d) # via pandas
&gt;&gt;&gt; # ---------------------------------------
&gt;&gt;&gt; from sklearn import preprocessing
&gt;&gt;&gt; ohenc = preprocessing.OneHotEncoder()
&gt;&gt;&gt; ohenc.fit(np.array(d).reshape(-1,1))
&gt;&gt;&gt; ohenc.transform(np.array(d)
...                 .reshape(-1,1)).toarray()
&gt;&gt;&gt; # ---------------------------------------
&gt;&gt;&gt; import category_encoders as ce
&gt;&gt;&gt; ohencoder = (ce.OneHotEncoder(cols=['Name'])
...                .fit(d))
&gt;&gt;&gt; ohencoder.transform(d)</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n16">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="136.0" width="1126.0" x="1191.0" y="614.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="133.9953155517578" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">Feature encoding transforms categorical data to numerical value in order to make them processable for an algorithm. Two types of categorical data are of main interest here:</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n17">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="150.0" width="750.0" x="0.0" y="0.0"/>
          <y:Fill color="#9BF244" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="content" fontFamily="Julius Sans One" fontSize="40" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="134.91987228393555" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="l" textColor="#000000" verticalTextPosition="bottom" visible="true" width="440.11956787109375" x="4.0" xml:space="preserve" y="7.540063858032227">Python Cheat Sheet
Dec 2019
Dennis Gluesenkamp</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n18">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="150.0" width="750.0" x="2758.0" y="0.0"/>
          <y:Fill color="#9BF244" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="right" autoSizePolicy="content" fontFamily="Julius Sans One" fontSize="40" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="134.91987228393555" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="r" textColor="#000000" verticalTextPosition="bottom" visible="true" width="482.67950439453125" x="263.32049560546875" xml:space="preserve" y="7.540063858032227">Twitter: @dgluesen
GitHub: @dgluesen
Instagram: @dgluesen</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n19">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="246.0" width="1126.0" x="15.0" y="1278.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="237.2255859375" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; c['Duration']=c['Term']-c['Entry']
&gt;&gt;&gt; c['Duration']
emp01    943 days
emp02   1368 days
emp03    486 days
Name: Duration, dtype: timedelta64[ns]</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n20">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="89.0" width="1126.0" x="15.0" y="1189.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="91.33020782470703" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">Plain calculations lead to timedelta objects in order to get time differences.</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n21">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="167.0" width="1126.0" x="15.0" y="1974.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="160.150390625" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; c.loc[:,'entry':'duration']   # range of names
&gt;&gt;&gt; c.loc[:,['entry','duration']] # explicit names
&gt;&gt;&gt; c.iloc[:,1:3]                 # range of indices
&gt;&gt;&gt; c.iloc[:,[1,3]]               # explicit indices</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n22">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="1191.0" y="165.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Julius Sans One" fontSize="45" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="55.09508514404297" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#395819" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">9. Joining DataFrames</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n23">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="1191.0" y="551.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Julius Sans One" fontSize="45" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="55.09508514404297" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#395819" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">10. Feature Encoding</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n24">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="63.0" width="1126.0" x="1191.0" y="1797.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="40" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="54.759952545166016" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">10.2 Ordinal encoding</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n25">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="49.0" width="1126.0" x="1191.0" y="1860.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="48.665103912353516" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">Transformation of categorical values to sequence of integers</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n26">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="285.0" width="1126.0" x="1191.0" y="1909.0"/>
          <y:Fill color="#ECFCDD" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Cutive Mono" fontSize="35" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="275.76318359375" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#2A2E30" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">&gt;&gt;&gt; labelenc = preprocessing.LabelEncoder()
&gt;&gt;&gt; labelenc.fit(d)
&gt;&gt;&gt; labelenc.transform(d)
&gt;&gt;&gt; # ---------------------------------------
&gt;&gt;&gt; ordencoder = (ce.OrdinalEncoder(cols=['Name'])
...                 .fit(d))
&gt;&gt;&gt; ordencoder.transform(d)</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n27">
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="89.0" width="1126.0" x="1191.0" y="2194.0"/>
          <y:Fill hasColor="false" transparent="false"/>
          <y:BorderStyle hasColor="false" raised="false" type="line" width="3.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Montserrat" fontSize="35" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="91.33020782470703" horizontalTextPosition="center" iconTextGap="4" modelName="internal" modelPosition="tl" textColor="#000000" verticalTextPosition="bottom" visible="true" width="1126.0" x="4.0" xml:space="preserve" y="4.0">For other classical encoders or further ones like contrast or bayesian encoders refer to the package documentations.</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
  </graph>
  <data key="d7">
    <y:Resources/>
  </data>
</graphml>
